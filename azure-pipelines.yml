# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- feature/*

pr:
- master

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: packageAndPublish
  displayName: Package And Publish Buyingcatalogue
  # pool:
  #   name: GP IT Futures AKS Build Agents
  variables:
    - group: dev-acr-secrets
  steps:
  - task: UseGitVersion@5
    displayName: gitversion
    inputs:
      versionSpec: '5.x'
  - script: echo semver $(GitVersion.SemVer), MajorMinorPatch $(GitVersion.MajorMinorPatch), Reason $(Build.Reason), Branch $(Build.SourceBranch), BranchName $(Build.SourceBranchName), PRID $(System.PullRequest.PullRequestId), PRNumber $(System.PullRequest.PullRequestNumber)
    name: echovar
  - task: HelmInstaller@1
    displayName: 'install helm'
    inputs:
      helmVersionToInstall: 'latest'
  - bash: |      
      helm package \
          --version $(GitVersion.SemVer) \
          --app-version $(GitVersion.SemVer) \
          src/buyingcatalogue
    failOnStderr: true
    displayName: 'helm package'
  - bash: |      
      chartPackage=$(ls buyingcatalogue-*.tgz)
      echo "Chart Package $chartPackage"
      az --version
      az acr helm push --force \
          -n gpitfuturesdevacr \
          -u gpitfuturesdevacr \
          -p $(gpitfuturesdevacr-pass) \
          $chartPackage      
    failOnStderr: true
    name: helmPush
    displayName: 'az acr helm push'
  - script: echo "##vso[task.setvariable variable=semVer;isOutput=true]$(GitVersion.SemVer)"
    name: setVersionStep
  - script: echo semVer $(setVersionStep.semVer)
    name: echovar
- job: deployToDev
  dependsOn: packageAndPublish
  variables:
    - group: dev-acr-secrets
    - name: semVer
      value: $[ dependencies.packageAndPublish.outputs['setVersionStep.semVer'] ]
  steps:
    # create namespace if it doesn't exist
  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureResourceGroup: 'gpitfutures-dev-rg-aks'
      kubernetesCluster: 'gpitfutures-dev-aks'
      command: 'apply'
      useConfigurationFile: true
      configurationType: 'inline'
      inline: |
        {
          "apiVersion": "v1",
          "kind": "Namespace",
          "metadata": {
            "name": "buyingcatalogue-$(semVer)",
            "labels": {
              "name": "buyingcatalogue-$(semVer)"
            }
          }
        }
      secretType: 'dockerRegistry'
      containerRegistryType: 'Azure Container Registry'
    # deploy chart to namespace

# - job: runAcceptanceTests
#   dependsOn: packageAndPublish
#   variables:
#     - group: dev-acr-secrets
#   steps:
    # public browse
    # marketing pages
    # admin
    # order
    # identity
  